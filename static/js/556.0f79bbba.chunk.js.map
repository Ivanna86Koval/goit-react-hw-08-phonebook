{"version":3,"file":"static/js/556.0f79bbba.chunk.js","mappings":"yNAmBWA,EAAS,WAAH,IAAIC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAC5BG,OAAOC,gBAAgB,IAAIC,WAAWN,IAAOO,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGV,GAAG,GAAG,E,kBC9BKG,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,cAItBC,EAAcH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0CAK1BG,EAAaL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qHCVzBK,EAAe,SAAAC,GAAK,OAAIA,EAAMC,MAAO,E,kBCIrCC,EAAS,WACpB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYL,GACpBM,GAAWC,EAAAA,EAAAA,MAQjB,OACEC,EAAAA,EAAAA,MAAChB,EAAS,CAAAiB,SAAA,EACRC,EAAAA,EAAAA,KAACd,EAAW,CAAAa,SAAC,2BACbC,EAAAA,EAAAA,KAACZ,EAAU,CAACa,KAAK,OAAOP,MAAOA,EAAOQ,SATzB,SAAAC,GACf,IAAMC,EAAkBD,EAAME,OAAOX,MAAMY,cAE3CV,GAASW,EAAAA,EAAAA,IAAaH,GACxB,MAQF,ECnBII,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACf,EAqBO,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKlD,SAAWmD,EAAKnD,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASkD,EAAKlD,OAEToD,EAAI,EAAGA,EAAIpD,EAAQoD,IAC1B,IAAKR,EAAcM,EAAKE,GAAID,EAAKC,IAC/B,OAAO,EAIX,OAAO,CACT,CACF,CAYmBC,CAAyBT,GACtCU,EAAoB,IAAZP,EA/Gd,SAA8BQ,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMlC,MAGRc,CACT,EACAuB,IAAK,SAAaD,EAAKpC,GACrBkC,EAAQ,CACNE,IAAKA,EACLpC,MAAOA,EAEX,EACAsC,WAAY,WACV,OAAOJ,EAAQ,CAACA,GAAS,EAC3B,EACAK,MAAO,WACLL,OAAQvD,CACV,EAEJ,CAwF8B6D,CAAqBb,GAtFnD,SAAwBF,EAASQ,GAC/B,IAAIQ,EAAU,GAEd,SAASN,EAAIC,GACX,IAAIM,EAAaD,EAAQE,WAAU,SAAUT,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC3B,IAEA,GAAIM,GAAc,EAAG,CACnB,IAAIR,EAAQO,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQX,IAGXA,EAAMlC,KACf,CAGA,OAAOc,CACT,CAwBA,MAAO,CACLqB,IAAKA,EACLE,IAxBF,SAAaD,EAAKpC,GACZmC,EAAIC,KAAStB,IAEf2B,EAAQI,QAAQ,CACdT,IAAKA,EACLpC,MAAOA,IAGLyC,EAAQ/D,OAAS+C,GACnBgB,EAAQK,MAGd,EAaER,WAXF,WACE,OAAOG,CACT,EAUEF,MARF,WACEE,EAAU,EACZ,EAQF,CAmCiEM,CAAetB,EAASE,GAEvF,SAASqB,IACP,IAAIhD,EAAQgC,EAAMG,IAAI1D,WAEtB,GAAIuB,IAAUc,EAAW,CAIvB,GAFAd,EAAQmB,EAAK8B,MAAM,KAAMxE,WAErBiD,EAAqB,CACvB,IAAIe,EAAUT,EAAMM,aAChBY,EAAgBT,EAAQU,MAAK,SAAUjB,GACzC,OAAOR,EAAoBQ,EAAMlC,MAAOA,EAC1C,IAEIkD,IACFlD,EAAQkD,EAAclD,MAE1B,CAEAgC,EAAMK,IAAI5D,UAAWuB,EACvB,CAEA,OAAOA,CACT,CAMA,OAJAgD,EAASI,WAAa,WACpB,OAAOpB,EAAMO,OACf,EAEOS,CACT,CC/IA,SAASK,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CAChB,IAAI,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAIG,MAAQ,WAAa,YAAcH,CAC3F,IAAGI,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGJ,EAAkB,IACxI,CAEA,OAAOL,CACT,CAEO,SAASU,EAAsBC,GACpC,IAAK,IAAIC,EAAO1F,UAAUC,OAAQ0F,EAAyB,IAAIZ,MAAMW,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAK5F,UAAU4F,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQ9F,UAAUC,OAAQ4E,EAAQ,IAAIE,MAAMe,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFlB,EAAMkB,GAAS/F,UAAU+F,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBjG,GAGdkG,EAAavB,EAAMR,MAQvB,GAN0B,kBAAf+B,IACTF,EAAwBE,EAExBA,EAAavB,EAAMR,OAGK,oBAAf+B,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBxB,MAAMC,QAAQmB,GAAkBA,EAAiB,CAACA,GACxErB,EAAeF,EAAgBC,GAC/B2B,EAAqBf,EAAQjB,WAAM,EAAQ,CAAC,WAG9C,OAFAyB,IAEOG,EAAW5B,MAAM,KAAMxE,UAChC,GAAGyG,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACT1G,EAAS6E,EAAa7E,OAEjBoD,EAAI,EAAGA,EAAIpD,EAAQoD,IAG1BsD,EAAOC,KAAK9B,EAAazB,GAAGmB,MAAM,KAAMxE,YAK1C,OADAgG,EAAcQ,EAAmBhC,MAAM,KAAMmC,EAE/C,IAeA,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpB1B,aAAcA,EACdiC,WAAY,WACV,OAAOf,CACT,EACAgB,eAAgB,WACd,OAAOf,CACT,EACAgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC3B,IAEKS,CACT,EAGA,OAAOb,CACT,CACO,I,QCvGHqB,EAAOC,EDuGAtB,EAAgCL,EAAsB/C,GEpGpD2E,EAAgB,SAAAhG,GAAK,OAAIA,EAAMiG,SAASC,SAAU,EAIlDC,EAAiB,SAAAnG,GAAK,OAAIA,EAAMiG,SAASG,KAAM,EAE/CC,EAAwB5B,EACnC,CAAC0B,EAAgBpG,IACjB,SAACkG,EAAUhG,GACT,OAAOgG,EAAShG,QAAO,SAAAqG,GAAO,OAC5BA,EAAQrC,KAAKlD,cAAcwF,SAAStG,EAAOc,cAAc,GAE7D,I,SCbWyF,EAAOhH,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2MAWlB+G,EAAQjH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sHAQpBgH,EAAQlH,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yFAOpBiH,EAASnH,EAAAA,GAAAA,OAAaoH,IAAAA,GAAAlH,EAAAA,EAAAA,GAAA,4RF3B/BmH,EAAY,CAAC,QAAS,WAC1B,SAASC,IAA2Q,OAA9PA,EAAWrB,OAAOC,QAAU,SAAU5E,GAAU,IAAK,IAAImB,EAAI,EAAGA,EAAIrD,UAAUC,OAAQoD,IAAK,CAAE,IAAI8E,EAASnI,UAAUqD,GAAI,IAAK,IAAIM,KAAOwE,EAActB,OAAOuB,UAAUC,eAAeC,KAAKH,EAAQxE,KAAQzB,EAAOyB,GAAOwE,EAAOxE,GAAU,CAAE,OAAOzB,CAAQ,EAAUgG,EAAS1D,MAAM+D,KAAMvI,UAAY,CAC5T,SAASwI,EAAyBL,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,CAAC,EAAG,IAAkExE,EAAKN,EAAnEnB,EACzF,SAAuCiG,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,CAAC,EAAG,IAA2DxE,EAAKN,EAA5DnB,EAAS,CAAC,EAAOwG,EAAa7B,OAAO8B,KAAKR,GAAqB,IAAK9E,EAAI,EAAGA,EAAIqF,EAAWzI,OAAQoD,IAAOM,EAAM+E,EAAWrF,GAAQoF,EAASG,QAAQjF,IAAQ,IAAazB,EAAOyB,GAAOwE,EAAOxE,IAAQ,OAAOzB,CAAQ,CADhN2G,CAA8BV,EAAQM,GAAuB,GAAI5B,OAAOiC,sBAAuB,CAAE,IAAIC,EAAmBlC,OAAOiC,sBAAsBX,GAAS,IAAK9E,EAAI,EAAGA,EAAI0F,EAAiB9I,OAAQoD,IAAOM,EAAMoF,EAAiB1F,GAAQoF,EAASG,QAAQjF,IAAQ,GAAkBkD,OAAOuB,UAAUY,qBAAqBV,KAAKH,EAAQxE,KAAgBzB,EAAOyB,GAAOwE,EAAOxE,GAAQ,CAAE,OAAOzB,CAAQ,CAG3e,SAAS+G,EAAOC,EAAMC,GACpB,IAAIC,EAAQF,EAAKE,MACfC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAMjB,GACzC,OAAoB,gBAAoB,MAAOC,EAAS,CACtDqB,MAAO,6BACPC,QAAS,YACTC,IAAKN,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3D7I,GAAI8I,GACHD,GAAS,KAAMlC,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EwC,EAAG,gBACHC,KAAM,UACHxC,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEuC,EAAG,yCAEP,CACA,I,MAAIE,EAA0B,aAAiBX,GGfzCY,GHgBS,IGhBK/J,KACdgK,EAAgBhK,IAETiK,EAAc,WACzB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7B3E,EAAI6E,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBjD,GAAW7F,EAAAA,EAAAA,IAAY+F,GACvB9F,GAAWC,EAAAA,EAAAA,MAqBX+I,EAAe,SAAAzI,GACnB,IAAA0I,EAAwB1I,EAAM2I,cAAtBtF,EAAIqF,EAAJrF,KAAM9D,EAAKmJ,EAALnJ,MACd,OAAQ8D,GACN,IAAK,OACH+E,EAAQ7I,GACR,MACF,IAAK,SACHiJ,EAAUjJ,GACV,MACF,QACE,OAEN,EAEA,OACEI,EAAAA,EAAAA,MAAAiJ,EAAAA,SAAA,CAAAhJ,SAAA,EACED,EAAAA,EAAAA,MAACiG,EAAI,CAACiD,SAnCW,SAAA7I,GACnBA,EAAM8I,iBAEezD,EAAS0D,MAC5B,SAAArD,GAAO,OAAIA,EAAQrC,KAAKlD,gBAAkBkD,EAAKlD,aAAa,IAI5D6I,MAAM,GAADvE,OAAIpB,EAAI,mGAKf5D,GAASwJ,EAAAA,EAAAA,IAAY,CAAE5F,KAAAA,EAAMkF,OAAAA,KAE7BH,EAAQ,IACRI,EAAU,IACZ,EAkBiC5I,SAAA,EAC3BD,EAAAA,EAAAA,MAACkG,EAAK,CAACqD,QAASrB,EAAYjI,SAAA,CAAC,QAE3BC,EAAAA,EAAAA,KAACiG,EAAK,CACJhG,KAAK,OACLuD,KAAK,OACL8F,YAAY,iEACZ5J,MAAO8D,EACPtD,SAAU0I,EACVW,QAAQ,YACRhC,MAAM,8SACNiC,UAAQ,QAIZ1J,EAAAA,EAAAA,MAACkG,EAAK,CAACqD,QAASpB,EAAclI,SAAA,CAAC,UAE7BC,EAAAA,EAAAA,KAACiG,EAAK,CACJhG,KAAK,MACLuD,KAAK,SACL8F,YAAY,6HACZ5J,MAAOgJ,EACPxI,SAAU0I,EACVW,QAAQ,aACRhC,MAAM,8OACNiC,UAAQ,QAIZ1J,EAAAA,EAAAA,MAACoG,EAAM,CAACjG,KAAK,SAAQF,SAAA,EACnBC,EAAAA,EAAAA,KAACyJ,EAAO,CAAC3B,KAAK,UAAU4B,MAAM,KAAKC,OAAO,OAAO,cACrC,WAGhB3J,EAAAA,EAAAA,KAACP,EAAM,MAGb,ECxFamK,EAAO7K,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yOAYhB4K,EAAO9K,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uOAYhB6K,EAAc/K,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wKCpB3B8K,EAAc,WACzB,IAAMvE,GAAW7F,EAAAA,EAAAA,IAAYiG,GACvBhG,GAAWC,EAAAA,EAAAA,MAEjB,OACEG,EAAAA,EAAAA,KAAC4J,EAAI,CAAA7J,SACFyF,EAASjC,KAAI,SAAAsC,GAAO,OACnB/F,EAAAA,EAAAA,MAAC+J,EAAI,CAAA9J,SAAA,CACF8F,EAAQrC,KAAO,MAAQqC,EAAQ6C,QAE9B1I,EAAAA,EAAAA,KAAC8J,EAAW,CACV7J,KAAK,SACL+J,QAAS,kBAAMpK,GAASqK,EAAAA,EAAAA,IAAepE,EAAQnH,IAAI,EAACqB,SACrD,aANM8F,EAAQnH,GAUZ,KAIf,E,UCnBe,SAASwL,KACtB,IAAMtK,GAAWC,EAAAA,EAAAA,MACX4F,GAAY9F,EAAAA,EAAAA,IAAY4F,GAM9B,OAJD4E,EAAAA,EAAAA,YAAU,WACPvK,GAASwK,EAAAA,EAAAA,MACX,GAAG,CAACxK,KAGFE,EAAAA,EAAAA,MAAAiJ,EAAAA,SAAA,CAAAhJ,SAAA,EACAC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,mBACRC,EAAAA,EAAAA,KAACkI,EAAW,IAAG,KAClBlI,EAAAA,EAAAA,KAAA,OAAAD,SAAM0F,IAAazF,EAAAA,EAAAA,KAACqK,GAAAA,EAAM,MAAW,IAAI,KACzCrK,EAAAA,EAAAA,KAAC+J,EAAW,IAAG,MAGf,C","sources":["../node_modules/nanoid/index.browser.js","components/Filter/Filter.styled.js","redux/filter/selectors.js","components/Filter/Filter.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","icons/add.svg","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from 'styled-components';\n\nexport const FilterDiv = styled.div`\n  \n`;\n\nexport const FilterLabel = styled.label`\ncolor: #000;\nfont-size: 20px;\n`;\n\nexport const FilterName = styled.input`\n  width: 400px;\n  padding: 10px;\n  margin: 0 auto;\n  border-radius: 4px;\n  border: 3px solid #f08080;\n`;","\nexport const selectFilter = state => state.filter;\n","import { FilterDiv, FilterLabel, FilterName } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    const normalizedValue = event.target.value.toLowerCase();\n\n    dispatch(changeFilter(normalizedValue));\n  };\n\n  return (\n    <FilterDiv>\n      <FilterLabel>Find contacts by name</FilterLabel>\n      <FilterName type=\"text\" value={value} onChange={onChange} />\n    </FilterDiv>\n  );\n};\n\nexport default Filter;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgAdd(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdd);\nexport default __webpack_public_path__ + \"static/media/add.b32f3a092015d7a228e03084a624cb0b.svg\";\nexport { ForwardRef as ReactComponent };","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  background-color: rgba(0, 0, 0, 0.6);\n  border: 3px solid #f08080;\n  border-radius: 4px;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  color: #f08080;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  color: #171718;\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #f08080;\n  color: #f08080;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: #b9bcd3;\n  }\n`;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { ReactComponent as AddIcon } from 'icons/add.svg';\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isInContacts = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      alert(`${name} вже в контактах☝️`);\n\n      return;\n    }\n\n    dispatch(addContacts({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor={nameInputId}>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Введіть ім'я\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[^\\d]+$\"\n            title=\"Ім'я має містити лише літери, апострофи, дефіси та відступи\"\n            required\n          />\n        </Label>\n\n        <Label htmlFor={numberInputId}>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Введіть номер телефону\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+\\d{12}\"\n            title=\"Номер телефону має починатися з +, а потім 12 цифр\"\n            required\n          />\n        </Label>\n\n        <Button type=\"submit\">\n          <AddIcon fill=\"#f08080\" width=\"25\" height=\"25\" />\n          Add contact{' '}\n        </Button>\n      </Form>\n      <Filter />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, 0.6);\n  border: 3px solid #f08080;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  background-color: #ffffff;\n  border: 3px solid #f08080;\n  padding: 10px;\n  border-radius: 4px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n`;\n\nexport const ListItemBtn = styled.button`\n  padding: 4px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px 8px;\n  border: 3px solid #f08080;\n  display: flex;\n  align-items: center;\n`;","import React from 'react';\nimport { List, Item, ListItemBtn } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Item key={contact.id}>\n          {contact.name + ' : ' + contact.number}\n          {\n            <ListItemBtn\n              type=\"button\"\n              onClick={() => dispatch(deleteContacts(contact.id))}\n            >\n              Delete\n            </ListItemBtn>\n          }\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Loader } from '../components/Loader/Loader';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n    <title>Your contacts</title>\n   <ContactForm /> {/* Компонент форми для додавання контакту */}\n<div>{isLoading && <Loader />}</div>{' '} {/* Відображення повідомлення про виконання запиту */}\n<ContactList /> {/* Компонент для відображення списку контактів */ }\n</>\n);\n}\n"],"names":["nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","FilterDiv","styled","_templateObject","_taggedTemplateLiteral","FilterLabel","_templateObject2","FilterName","_templateObject3","selectFilter","state","filter","Filter","value","useSelector","dispatch","useDispatch","_jsxs","children","_jsx","type","onChange","event","normalizedValue","target","toLowerCase","changeFilter","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","_path","_path2","selectLoading","contacts","isLoading","selectContacts","items","selectVisibleContacts","contact","includes","Form","Label","Input","Button","_templateObject4","_excluded","_extends","source","prototype","hasOwnProperty","call","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgAdd","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","d","fill","ForwardRef","nameInputId","numberInputId","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleChange","_event$currentTarget","currentTarget","_Fragment","onSubmit","preventDefault","some","alert","addContacts","htmlFor","placeholder","pattern","required","AddIcon","width","height","List","Item","ListItemBtn","ContactList","onClick","deleteContacts","Tasks","useEffect","fetchContacts","Loader"],"sourceRoot":""}